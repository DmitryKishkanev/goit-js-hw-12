{"version":3,"file":"1-gallery-then_catch-hw-12.js","sources":["../src/js/gallery-then_catch-hw-12/pixabay-api.js","../src/js/gallery-then_catch-hw-12/render-functions.js","../src/js/gallery-then_catch-hw-12/gallery-main.js"],"sourcesContent":["import axios from 'axios';\n\n// Переменная для хранения базового URL\nconst BASE_URL = 'https://pixabay.com/api/';\n// Переменная для хранения APY KEY\nconst API_KEY = '50268892-929648ae4af930c873d247de9';\n\n// Класс запроса на бэкенд\nexport default class GetImagesByQuery {\n  // Конструктор для хранения объекта состояний\n  constructor(options = {}) {\n    this.searchQuery = '';\n    this.page = 1;\n    this.searchTotalLoaded = 0;\n    this.searchTotalHits = 0;\n\n    this.perPage = options.perPage || 15;\n    this.orientation = options.orientation || 'horizontal';\n  }\n\n  // Функция запроса на бэкенд\n  fetchArticles() {\n    return axios\n      .get(BASE_URL, {\n        params: {\n          key: API_KEY,\n          q: this.searchQuery,\n          page: this.page,\n          per_page: this.perPage,\n          image_type: 'photo',\n          orientation: this.orientation,\n          safesearch: true,\n        },\n      })\n      .then(response => {\n        this.incrementPage();\n\n        return response.data;\n      })\n      .catch(error => {\n        console.error('Ошибка при запросе изображений:', error);\n        // Пробрасываем ошибку дальше для обработки\n        throw error;\n      });\n  }\n  // Метод увеличения номера группы загружаемых данных на 1\n  incrementPage() {\n    this.page += 1;\n  }\n\n  // Метод сброса состояний\n  resetPage() {\n    this.page = 1;\n    this.searchTotalLoaded = 0;\n    this.searchTotalHits = 0;\n  }\n\n  // Метод проверки доступных изображений\n  hasMore() {\n    return this.searchTotalLoaded < this.searchTotalHits;\n  }\n\n  // Геттеры и сеттеры для записи и чтения состояний конструктора\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n\n  get totalLoaded() {\n    return this.searchTotalLoaded;\n  }\n\n  set totalLoaded(newTotalLoaded) {\n    this.searchTotalLoaded = newTotalLoaded;\n  }\n\n  get totalHits() {\n    return this.searchTotalHits;\n  }\n\n  set totalHits(newtotalHits) {\n    this.searchTotalHits = newtotalHits;\n  }\n}\n\n// // Функция запроса на бэкенд\n// export function getImagesByQuery(query, page) {\n//   const BASE_URL = 'https://pixabay.com/api/';\n//   const API_KEY = '50268892-929648ae4af930c873d247de9';\n\n//   return axios\n//     .get(BASE_URL, {\n//       params: {\n//         key: API_KEY,\n//         q: query,\n//         page: page,\n//         per_page: 15,\n//         image_type: 'photo',\n//         orientation: 'horizontal',\n//         safesearch: true,\n//       },\n//     })\n//     .then(response => response.data);\n// }\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst galleryContainer = document.querySelector('.gallery');\nconst loaderEl = document.querySelector('.loader');\nconst loadMoreButton = document.querySelector('.load-button');\n\n//Создание экземпляра модельного окна SimpleLightbox с дополнительными настройками\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionPosition: 'bottom',\n  captionDelay: 250,\n});\n\n// Функция рендера изображений\nfunction createGallery(images) {\n  const galleryMarkup = images\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => {\n        return `\n<li class=\"gallery-item\">\n  <a class=\"gallery-link\" href=\"${largeImageURL}\">\n    <img class=\"gallery-image\" src=\"${webformatURL}\" alt=\"${tags}\" />\n    <ul class=\"gallery-analytics\">\n      <li class=\"gallery-counters\">\n        <h1>Likes</h1>\n        ${likes}\n      </li>\n      <li class=\"gallery-counters\">\n        <h1>Views</h1>\n        ${views}\n      </li>\n      <li class=\"gallery-counters\">\n        <h1>Comments</h1>\n        ${comments}\n      </li>\n      <li class=\"gallery-counters\">\n        <h1>Downloads</h1>\n        ${downloads}\n      </li>\n    </ul>\n  </a>\n</li>\n\n  `;\n      }\n    )\n    .join('');\n\n  // Добавляем карточки в контейнер галереи\n  galleryContainer.insertAdjacentHTML('beforeend', galleryMarkup);\n\n  // Метод удаления и повторной инициализации лайтбокса\n  lightbox.refresh();\n}\n\n// Функция очистки контейнера галереи\nfunction clearGallery() {\n  galleryContainer.innerHTML = '';\n}\n\n// Функция отображения Loader\nfunction showLoader() {\n  loaderEl.classList.add('active');\n}\n\n// Функция скрывания Loader\nfunction hideLoader() {\n  loaderEl.classList.remove('active');\n}\n\n// Функция отображения кнопки\nfunction showLoadMoreButton() {\n  loadMoreButton.classList.remove('is-hidden');\n}\n\n// Функция скрывания кнопки\nfunction hideLoadMoreButton() {\n  loadMoreButton.classList.add('is-hidden');\n}\n\n// Универсальная функция плавного автоскрола страницы (Пример с другим селектором - scrollAfterRender({ selector: '.news-card', multiplier: 1.5 }))\nfunction scrollAfterRender(options = {}) {\n  const {\n    // Селектор карточки по умолчанию\n    selector = '.gallery-item',\n    // Множитель высоты по умолчанию\n    multiplier = 2,\n  } = options;\n\n  // Встроенная функция браузера, делает вызов колбека отложенным\n  requestAnimationFrame(function () {\n    // Получаем в переменную нашу карточку\n    const card = document.querySelector(selector);\n    // Если получили карточку\n    if (card) {\n      // Получаем в переменную именно высоту нашей карточки\n      const cardHeight = card.getBoundingClientRect().height;\n      // Прокручиваем страницу вниз на две высоты карточки\n      window.scrollBy({\n        top: cardHeight * multiplier,\n        left: 0,\n        behavior: 'smooth',\n      });\n    }\n  });\n}\n\nexport {\n  createGallery,\n  clearGallery,\n  showLoader,\n  hideLoader,\n  showLoadMoreButton,\n  hideLoadMoreButton,\n  loadMoreButton,\n  scrollAfterRender,\n};\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n// import { getImagesByQuery } from './pixabay-api';\nimport GetImagesByQuery from './pixabay-api';\nimport {\n  createGallery,\n  clearGallery,\n  showLoader,\n  hideLoader,\n  showLoadMoreButton,\n  hideLoadMoreButton,\n  loadMoreButton,\n  scrollAfterRender,\n} from './render-functions';\nimport '../../css/styles.css';\n\nconst formEl = document.querySelector('.form');\n\n// Вешаем на форму слушатель события submit\nformEl.addEventListener('submit', onFormSubmit);\nloadMoreButton.addEventListener('click', onLoadMoreButton);\n\n// Создаём экземпляр класса\nconst imageFetcher = new GetImagesByQuery();\n\n// Скрываем кнопку load more\nhideLoadMoreButton();\n\n// Функция - обработчик слушателя события формы\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  // Очищаем галерею\n  clearGallery();\n  // Скрываем кнопку load more\n  hideLoadMoreButton();\n  // Показываем Loader\n  showLoader();\n  // Cбрасываем объект состояний\n  imageFetcher.resetPage();\n\n  // Сохраняем в объект состояний данные из инпута\n  imageFetcher.query = evt.currentTarget.elements['search-text'].value.trim();\n\n  // Обрабатываем промис функции запроса на бэкенд из экземпляра класса\n  imageFetcher\n    .fetchArticles()\n    .then(data => {\n      // Если ответ пришёл с ошибкой\n      if (data.hits.length === 0) {\n        // Вызов нотификации\n        iziToastOptions(\n          'Sorry, there are no images matching your search query. Please try again!',\n          'pink'\n        );\n        return;\n      }\n      // Создаём галерю с данными из бэкенда\n      createGallery(data.hits);\n      // Отображаем кнопку load more\n      showLoadMoreButton();\n\n      // Сохраняем  в объект состояний кол-во доступных элементов\n      imageFetcher.totalHits = data.totalHits;\n      // Сохраняем  в объект состояний общее кол-во загруженных элементов\n      imageFetcher.totalLoaded += data.hits.length;\n\n      // Очищаем инпут\n      formEl.reset();\n    })\n    .catch(error => {\n      console.log('Ошибка, что-то пошло не так:', error);\n      iziToastOptions(\n        'Oops! Something went wrong while fetching images. Please try again later.',\n        'pink'\n      );\n    })\n    .finally(() => {\n      // Скрываем Loader\n      hideLoader();\n    });\n}\n\n// Функция - обработчик слушателя события кнопки load more\nfunction onLoadMoreButton() {\n  // Скрываем кнопку load more\n  hideLoadMoreButton();\n  // Показываем Loader\n  showLoader();\n\n  // Обрабатываем промис функции запроса на бэкенд за дополнительной загрузкой\n  imageFetcher\n    .fetchArticles()\n    .then(data => {\n      // Добавляем в галерю данные к уже существующим\n      createGallery(data.hits);\n      // Плавно скролим страницу\n      scrollAfterRender();\n      // Обновляем в объекте состояний кол-во загруженных элементов\n      imageFetcher.totalLoaded += data.hits.length;\n\n      // Проверяем не превышает ли кол-во загруженных элементов кличества доступных\n      if (!imageFetcher.hasMore()) {\n        // Отображаем нотификацию, если всё загружено\n        iziToastOptions(\n          'Sorry, but you have reached the end of the search results',\n          'pink'\n        );\n        // Скрываем кнопку load more, если всё загружено\n        hideLoadMoreButton();\n      } else {\n        // Иначе отображаем кнопку load more снова\n        showLoadMoreButton();\n      }\n    })\n    .catch(error => {\n      console.log('Ошибка, что-то пошло не так:', error);\n      iziToastOptions(\n        'Oops! Something went wrong while fetching images. Please try again later.',\n        'pink'\n      );\n    })\n    .finally(() => {\n      // Скрываем Loader\n      hideLoader();\n    });\n}\n\n// // Перменная хранит объект состояний\n// const searchState = {\n//   query: '',\n//   page: 1,\n//   totalLoaded: 0,\n//   totalHits: 0,\n// };\n\n// // Функция сброса состояний\n// function resetSearch() {\n//   searchState.page = 1;\n//   searchState.totalLoaded = 0;\n//   searchState.totalHits = 0;\n// }\n\n// // Скрываем кнопку load more\n// hideLoadMoreButton();\n\n// // Функция - обработчик слушателя события формы\n// function onFormSubmit(evt) {\n//   evt.preventDefault();\n\n//   // Очищаем галерею\n//   clearGallery();\n//   // Скрываем кнопку load more\n//   hideLoadMoreButton();\n//   // Показываем Loader\n//   showLoader();\n//   // Cбрасываем счётчики\n//   resetSearch();\n\n//   // Сохраняем в объект состояний данные из инпута\n//   searchState.query = evt.currentTarget.elements['search-text'].value.trim();\n\n//   // Обрабатываем промис функции запроса на бэкенд\n//   getImagesByQuery(searchState.query, searchState.page)\n//     .then(data => {\n//       // Если ответ пришёл с ошибкой\n//       if (data.hits.length === 0) {\n//         // Вызов нотификации\n//         iziToastOptions(\n//           'Sorry, there are no images matching your search query. Please try again!',\n//           'pink'\n//         );\n//         return;\n//       }\n//       // Создаём галерю с данными из бэкенда\n//       createGallery(data.hits);\n//       // Отображаем кнопку load more\n//       showLoadMoreButton();\n\n//       // Сохраняем  в объект состояний кол-во доступных элементов\n//       searchState.totalHits = data.totalHits;\n//       // Сохраняем  в объект состояний общее кол-во загруженных элементов\n//       searchState.totalLoaded += data.hits.length;\n//       // Сохраняем  в объект состояний увеличение номера группы на 1\n//       searchState.page += 1;\n//       // Очищаем инпут\n//       formEl.reset();\n//     })\n//     .catch(error => {\n//       console.log('Ошибка при запросе изображений:', error);\n//       iziToastOptions(\n//         'Oops! Something went wrong while fetching images. Please try again later.',\n//         'pink'\n//       );\n//     })\n//     .finally(() => {\n//       // Скрываем Loader\n//       hideLoader();\n//     });\n// }\n\n// // Функция - обработчик слушателя события кнопки load more\n// function onLoadMoreButton() {\n//   // Скрываем кнопку load more\n//   hideLoadMoreButton();\n//   // Показываем Loader\n//   showLoader();\n\n//   // Функция запроса дополнительной загрузки\n//   getImagesByQuery(searchState.query, searchState.page)\n//     .then(data => {\n//       // Добавляем в галерю данные к уже существующим\n//       createGallery(data.hits);\n//       // Плавно скролим страницу\n//       scrollAfterRender();\n//       // Обновляем в объекте состояний кол-во загруженных элементов\n//       searchState.totalLoaded += data.hits.length;\n//       // Увеличиваем в объекте состояний номера группы загружаемых элементов на 1\n//       searchState.page += 1;\n\n//       // Проверяем не превышает ли кол-во загруженных элементов кличества доступных\n//       if (searchState.totalLoaded >= searchState.totalHits) {\n//         // Отображаем нотификацию, если всё загружено\n//         iziToastOptions(\n//           'Sorry, but you have reached the end of the search results',\n//           'pink'\n//         );\n//         // Скрываем кнопку load more, если всё загружено\n//         hideLoadMoreButton();\n//       } else {\n//         // Иначе отображаем кнопку load more снова\n//         showLoadMoreButton();\n//       }\n//     })\n//     .catch(error => {\n//       console.log('Ошибка при запросе изображений:', error);\n//       iziToastOptions(\n//         'Oops! Something went wrong while fetching images. Please try again later.',\n//         'pink'\n//       );\n//     })\n//     .finally(() => {\n//       // Скрываем Loader\n//       hideLoader();\n//     });\n// }\n\n// Опции подключенного через библиотеку alert\nfunction iziToastOptions(message, backgroundColor) {\n  return iziToast.show({\n    message,\n    messageColor: '#ff0000',\n    backgroundColor,\n    icon: '\tfa fa-ban',\n    iconColor: '#8b0000',\n    position: 'topRight',\n  });\n}\n"],"names":["BASE_URL","API_KEY","GetImagesByQuery","options","axios","response","error","newQuery","newTotalLoaded","newtotalHits","galleryContainer","loaderEl","loadMoreButton","lightbox","SimpleLightbox","createGallery","images","galleryMarkup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","clearGallery","showLoader","hideLoader","showLoadMoreButton","hideLoadMoreButton","scrollAfterRender","selector","multiplier","card","cardHeight","formEl","onFormSubmit","onLoadMoreButton","imageFetcher","evt","data","iziToastOptions","message","backgroundColor","iziToast"],"mappings":"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"}